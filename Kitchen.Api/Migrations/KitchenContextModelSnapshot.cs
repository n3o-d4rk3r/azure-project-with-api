// <auto-generated />
using System;
using Kitchen.Data.DataContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Kitchen.Api.Migrations
{
    [DbContext(typeof(KitchenContext))]
    partial class KitchenContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Kitchen.Data.Models.DailyMenu", b =>
                {
                    b.Property<string>("DailyMenuID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.HasKey("DailyMenuID");

                    b.ToTable("DailyMenus");
                });

            modelBuilder.Entity("Kitchen.Data.Models.KitchenHub", b =>
                {
                    b.Property<string>("KitchenHubID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.HasKey("KitchenHubID");

                    b.ToTable("Kitchens");
                });

            modelBuilder.Entity("Kitchen.Data.Models.MenuCatalog", b =>
                {
                    b.Property<string>("MenuCatalogID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotographUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MenuCatalogID");

                    b.ToTable("MenuCatalogs");
                });

            modelBuilder.Entity("Kitchen.Data.Models.MenuItem", b =>
                {
                    b.Property<string>("MenuItemID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DailyMenuID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("MenuCatalogID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("MenuItemID");

                    b.HasIndex("DailyMenuID");

                    b.HasIndex("MenuCatalogID");

                    b.ToTable("MenuItems");
                });

            modelBuilder.Entity("Kitchen.Data.Models.Resident", b =>
                {
                    b.Property<string>("ResidentID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DietLevel")
                        .HasColumnType("int");

                    b.Property<int?>("FluidLevel")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("RoomNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ResidentID");

                    b.ToTable("Residents");
                });

            modelBuilder.Entity("Kitchen.Data.Models.User", b =>
                {
                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Access")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Kitchen.Data.Models.MenuItem", b =>
                {
                    b.HasOne("Kitchen.Data.Models.DailyMenu", "DailyMenu")
                        .WithMany("MenuItems")
                        .HasForeignKey("DailyMenuID");

                    b.HasOne("Kitchen.Data.Models.MenuCatalog", "MenuCatalog")
                        .WithMany("MenuItems")
                        .HasForeignKey("MenuCatalogID");

                    b.Navigation("DailyMenu");

                    b.Navigation("MenuCatalog");
                });

            modelBuilder.Entity("Kitchen.Data.Models.DailyMenu", b =>
                {
                    b.Navigation("MenuItems");
                });

            modelBuilder.Entity("Kitchen.Data.Models.MenuCatalog", b =>
                {
                    b.Navigation("MenuItems");
                });
#pragma warning restore 612, 618
        }
    }
}
